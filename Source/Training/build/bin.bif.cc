// This file was automatically generated by bifcl from /home/hendra/CCD/Source/Training/src/bin.bif (plugin mode).


#include "bin.bif.h"


#line 40 "bin.bif"
 #include "Plugin.h"
typedef plugin::Training_Bin::Plugin plugin_t;
static plugin_t *plugin_ref = &plugin::Training_Bin::plugin;

#line 45 "bin.bif"
Val* BifFunc::BinTraining::bro_SetBinCount(Frame* frame, val_list* BiF_ARGS)
    
#line 46 "bin.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("BinTraining::SetBinCount() takes exactly 1 argument(s)");
		return 0;
		}
	Val* bin_count = (Val*) ((*BiF_ARGS)[0]);

#line 46 "bin.bif"

        plugin_ref->SetBinCount(bin_count);
        return new Val(1, TYPE_BOOL);
    } // end of BifFunc::BinTraining::bro_SetBinCount

#line 49 "bin.bif"

#line 51 "bin.bif"
Val* BifFunc::BinTraining::bro_ChangePrefix(Frame* frame, val_list* BiF_ARGS)
    
#line 52 "bin.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("BinTraining::ChangePrefix() takes exactly 1 argument(s)");
		return 0;
		}
	StringVal* prefix = (StringVal*) ((*BiF_ARGS)[0]->AsStringVal());

#line 52 "bin.bif"

        plugin_ref->ChangePrefix(prefix);
        return new Val(1, TYPE_BOOL);
    } // end of BifFunc::BinTraining::bro_ChangePrefix

#line 55 "bin.bif"

#line 57 "bin.bif"
Val* BifFunc::BinTraining::bro_SetKSDataCount(Frame* frame, val_list* BiF_ARGS)
    
#line 58 "bin.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("BinTraining::SetKSDataCount() takes exactly 1 argument(s)");
		return 0;
		}
	bro_uint_t ks_data_count = (bro_uint_t) ((*BiF_ARGS)[0]->AsCount());

#line 58 "bin.bif"

        plugin_ref->SetKSDataCount(ks_data_count);
        return new Val(1, TYPE_BOOL);
    } // end of BifFunc::BinTraining::bro_SetKSDataCount

#line 61 "bin.bif"

#line 63 "bin.bif"
Val* BifFunc::BinTraining::bro_RemoveConn(Frame* frame, val_list* BiF_ARGS)
	
#line 64 "bin.bif"
{
	if ( BiF_ARGS->length() != 1 )
		{
		reporter->Error("BinTraining::RemoveConn() takes exactly 1 argument(s)");
		return 0;
		}
	Val* tag = (Val*) ((*BiF_ARGS)[0]);

#line 64 "bin.bif"

		plugin_ref->RemoveConnection(tag);
		return new Val(1, TYPE_BOOL);
	} // end of BifFunc::BinTraining::bro_RemoveConn

#line 67 "bin.bif"

#line 69 "bin.bif"
Val* BifFunc::BinTraining::bro_add_feature(Frame* frame, val_list* BiF_ARGS)
	
#line 70 "bin.bif"
{
	if ( BiF_ARGS->length() != 2 )
		{
		reporter->Error("BinTraining::add_feature() takes exactly 2 argument(s)");
		return 0;
		}
	double feature = (double) ((*BiF_ARGS)[0]->AsDouble());
	Val* tag = (Val*) ((*BiF_ARGS)[1]);

#line 70 "bin.bif"

		plugin_ref->add_feature(feature, tag);
		return new Val(1, TYPE_BOOL);
	} // end of BifFunc::BinTraining::bro_add_feature

#line 73 "bin.bif"
